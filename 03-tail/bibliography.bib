% =============================================================================
% | Surveys and papers                                                        |
% =============================================================================


% -----------------------------------------------------------------------------
% Surveys and papers
% -----------------------------------------------------------------------------

@techreport{EffectivenessFullASLR64bit,
	title = {{On the Effectiveness of Full-ASLR on 64-bit Linux}},
  author = {Hector Marco-Gisbert and Ismael Ripoll},
  month = {11},
  year = {2014},
  institution = {Universitat Politècnica de València},
	url = {http://cybersecurity.upv.es/attacks/offset2lib/offset2lib-paper.pdf}
}

@techreport{CPIPaper,
	title = {{Code-Pointer Integrity}},
  author = {Volodymyr Kuznetsov and László Szekeres and Mathias Payer and George Candea and R. Sekar and Dawn Song},
  month = {10},
  year = {2014},
  institution = {Ecole Polytechnique Fédérale de Lausanne (EPFL), UC Berkeley, Stony Brook University, Purdue University},
	url = {http://dslab.epfl.ch/pubs/cpi.pdf}
}

@techreport{FineCFI,
	title = {{Fine-Grained Control-Flow Integrity through Binary Hardening}},
  author = {Mathias Payer and Antonio Barresi and Thomas R. Gross},
  institution = {Purdue University, ETH Zurich},
	url = {https://hexhive.github.io/publications/files/15DIMVA.pdf}
}

@techreport{FineCFIKernel,
	title = {{Fine-Grained Control-Flow Integrity for Kernel Software}},
  author = {Xinyang Ge and Nirupama Talele and Mathias Payer and Trent Jaeger},
  institution = {The Pennsylvania State University, Purdue University},
	url = {https://nebelwelt.net/publications/files/16EUROSP.pdf}
}

@techreport{CFIPaper,
	title = {{Control-Flow Integrity - Principles, Implementations, and Applications}},
  author = {Martín Abadi and Mihai Budiu and Ulfar Erlingsson and Jay Ligatti},
  institution = {University of California, Microsoft Research, Princeton University},
	url = {https://www.microsoft.com/en-us/research/wp-content/uploads/2005/11/ccs05.pdf}
}

@techreport{pharck49,
	title = {{Smashing The Stack For Fun And Profit}},
  author = {BugTraq and r00t and Underground.Org},
  month = {11},
  year = {1996},
	url = {http://www-inst.eecs.berkeley.edu/~cs161/fa08/papers/stack_smashing.pdf}
}


% -----------------------------------------------------------------------------
% Books
% -----------------------------------------------------------------------------



% -----------------------------------------------------------------------------
% Blog articles
% -----------------------------------------------------------------------------



% -----------------------------------------------------------------------------
% Websites
% -----------------------------------------------------------------------------


@online{AnatomyOfAProgramInMemory,
  author = {Gustavo Duarte},
  title = {Anatomy of a Program in Memory},
  url = {http://duartes.org/gustavo/blog/post/anatomy-of-a-program-in-memory/},
  date = {2009-01-27}
}

@online{HowTheKernelManagesYourMemory,
  author = {Gustavo Duarte},
  title = {How the Kernel Manages Your Memory},
  url = {http://duartes.org/gustavo/blog/post/how-the-kernel-manages-your-memory/},
  date = {2009-02-03}
}

@online{JourneyToTheStackPartI,
  author = {Gustavo Duarte},
  title = {Journey to the Stack, Part I},
  url = {http://duartes.org/gustavo/blog/post/journey-to-the-stack/},
  date = {2014-03-10}
}

@online{StackOverflowsDefeatingCanaries,
  title = {Stack Overflows - Defeating Canaries, ASLR, DEP, NX},
  url = {https://security.stackexchange.com/questions/20497/stack-overflows-defeating-canaries-aslr-dep-nx}
}

@online{BypassingASLRDEP,
  author = {Bypassing ASLR/DEP},
  title = {Vinay Katoch},
  url = {https://www.exploit-db.com/docs/17914.pdf}
}

@online{LeakingPointersBypassDEPASLR,
  title = {How “leaking pointers” to bypass DEP/ASLR works},
  url = {https://security.stackexchange.com/questions/22989/how-leaking-pointers-to-bypass-dep-aslr-works}
}

@online{ExecutableSpaceProtection,
  title = {Executable space protection},
  url = {https://en.wikipedia.org/wiki/Executable_space_protection},
  date = {2017-01-08}
}

@online{DataExecutionPrevention,
  title = {Data Execution Prevention},
  url = {https://fr.wikipedia.org/wiki/Data_Execution_Prevention},
  date = {2015-06-09}
}

@online{NXBit,
  title = {NX Bit},
  url = {https://fr.wikipedia.org/wiki/NX_Bit},
  date = {2017-03-21}
}

@online{ReturntolibcAttack,
  title = {Return-to-libc attack},
  url = {https://fr.wikipedia.org/wiki/Return-to-libc_attack},
  date = {2016-06-07}
}

@online{dslab,
  title = {Dependable Systems Lab},
  url = {http://dslab.epfl.ch/},
  date = {2017-04-23}
}

@online{64bitComputing,
  title = {64-bit computing},
  url = {https://en.wikipedia.org/wiki/64-bit_computing},
  date = {2017-04-27}
}

@online{VirtualAddressSpaceDetails,
  title = {Virtual address space details},
  url = {https://en.wikipedia.org/wiki/X86-64#Virtual_address_space_details},
  date = {2017-04-19}
}

@online{AddressSpaceLayoutRandomizationFR,
  title = {Address space layout randomization [FR]},
  url = {https://fr.wikipedia.org/wiki/Address_space_layout_randomization},
  date = {2016-02-15}
}

@online{AddressSpaceLayoutRandomizationEN,
  title = {Address space layout randomization [EN]},
  url = {https://en.wikipedia.org/wiki/Address_space_layout_randomization},
  date = {2017-03-28}
}

@online{StackCanaries,
  title = {Stack canaries},
  url = {https://en.wikipedia.org/wiki/Stack_buffer_overflow#Stack_canaries},
  date = {2017-03-30}
}

@online{SentinelSpecies,
  title = {Sentinel species},
  url = {https://en.wikipedia.org/wiki/Sentinel_species#Historical_examples},
  date = {2016-06-16}
}

@online{ControlFlowIntegrity,
  title = {Control Flow Integrity},
  url = {https://clang.llvm.org/docs/ControlFlowIntegrity.html}
}

@online{BufferOverflowProtection,
  title = {Buffer overflow protection},
  url = {https://en.wikipedia.org/wiki/Buffer_overflow_protection#Canaries},
  date = {2017-01-24}
}

@online{EpiloguesCanariesBufferOverflows,
  author = {Gustavo Duarte},
  title = {Epilogues, Canaries, and Buffer Overflows},
  url = {http://duartes.org/gustavo/blog/post/epilogues-canaries-buffer-overflows/},
  date = {2014-03-19}
}

@online{AddressSanitizer,
  title = {Clang 5 Documentation - AddressSanitizer},
  url = {https://clang.llvm.org/docs/AddressSanitizer.html}
}

@online{LLVMStackProtector,
  title = {LLVM StackProtector},
  url = {http://llvm.org/docs/LangRef.html#llvm-stackprotector-intrinsic}
}

@online{TalkAboutCFIClang,
  author = {Artem Dinaburg},
  title = {Let’s talk about CFI: clang edition},
  url = {https://blog.trailofbits.com/2016/10/17/lets-talk-about-cfi-clang-edition/},
  date = {2016-10-17}
}

@online{ControlFlowIntegrityDesignDocumentation,
  title = {Control Flow Integrity Design Documentation - Clang},
  url = {https://clang.llvm.org/docs/ControlFlowIntegrityDesign.html}
}

@online{ControlFlowIntegrityMaryland,
  title = {Control Flow Integrity - Université du Maryland},
	author = {Michael Hicks},
  url = {https://fr.coursera.org/learn/software-security/lecture/0gs3K/control-flow-integrity}
}

@online{ExploitingSimpleBufferOverflow,
  title = {Exploiting Simple Buffer Overflow (2) | Shellcode + ASLR Bruteforcing},
	author = {Taishi Nojima},
  url = {http://taishi8117.github.io/2015/11/11/stack-bof-2/},
  date = {2015-10-11}
}

@online{setjmp,
  title = {setjmp.h},
  url = {https://en.wikipedia.org/wiki/Setjmp.h},
  date = {2016-12-30}
}

@online{fonctionsVirtuelles,
  title = {Les fonctions virtuelles en C++: Types statiques et types dynamiques},
	author = {Developpez.com},
  url = {http://apais.developpez.com/tutoriels/c++/fonctions-virtuelles-en-cpp/?page=page_6}
}

@online{SmashingTheStack,
  title = {Smashing The Stack For Fun And Profit},
	author = {daemon9},
  url = {http://phrack.org/issues/49/14.html}
}

@online{PowerPC,
  title = {PowerPC},
  url = {https://fr.wikipedia.org/wiki/PowerPC},
  date = {2016-09-29}
}

@online{SoftBound,
  title = {SoftBound + CETS: Complete and Compatible Full Memory Safety for C},
  url = {https://www.cs.rutgers.edu/~santosh.nagarakatte/softbound/}
}

@online{x86MemorySegmentation,
  title = {x86 memory segmentation},
  url = {https://en.wikipedia.org/wiki/X86_memory_segmentation},
  date = {2016-12-23}
}

@online{IntroductionToROP,
  title = {Introduction to return oriented programming (ROP)},
  url = {http://codearcana.com/posts/2013/05/28/introduction-to-return-oriented-programming-rop.html},
  date = {2013-05-28},
	author = {Alex Reece}
}

@online{CheckSec,
  title = {checksec.sh},
  url = {http://www.trapkit.de/tools/checksec.html},
  date = {2011},
	author = {Tobias Klein}
}

@online{PositionIndependentExecutables,
  title = {Position-independent executables},
  url = {https://en.wikipedia.org/wiki/Position-independent_code#Position-independent_executables},
  date = {2017-04-20}
}

@online{LLVMaosabook,
  title = {LLVM, aosabook.org},
  url = {http://www.aosabook.org/en/llvm.html}
}

@online{ChrisLattner,
  title = {Chris Lattner's Homepage},
  url = {http://nondot.org/~sabre/}
}

@online{IntelMPX,
  title = {Intel MPX},
  url = {https://en.wikipedia.org/wiki/Intel_MPX}
}
